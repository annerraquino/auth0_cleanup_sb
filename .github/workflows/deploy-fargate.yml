name: Deploy to Fargate

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  # ECR repo name (no registry prefix)
  ECR_REPO: auth0-cleanup-sb
  # Path to the Terraform env you’re applying (adjust if different)
  ENV_DIR: infra/terraform/envs/dev
  # Optional: ECS service name override
  SERVICE_NAME: auth0-cleanup-sb

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-fargate
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME  }}     # set in repo Settings → Variables
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Java (JDK 21)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'

      - name: Build JAR (skip tests)
        working-directory: app
        run: mvn -q -DskipTests clean package

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        run: |
          IMAGE_URI="${ECR_REGISTRY}/${ECR_REPO}:${GITHUB_SHA}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          docker build -t "$IMAGE_URI" ./app
          docker push "$IMAGE_URI"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: terraform -chdir=${{ env.ENV_DIR }} init -input=false

        - name: Terraform Init
          working-directory: infra
          run: terraform init -input=false

        - name: Terraform Plan
          working-directory: infra
          env:
            ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          run: |
            terraform plan -input=false \
              -var="image_uri=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GITHUB_SHA}" \
              -var="s3_bucket=${{ vars.S3_BUCKET }}" \
              -var="ssm_param_prefix=${{ vars.SSM_PARAM_PREFIX }}"

        - name: Terraform Apply
          working-directory: infra
          env:
            ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          run: |
            terraform apply -auto-approve -input=false \
              -var="image_uri=${ECR_REGISTRY}/${ECR_REPOSITORY}:${GITHUB_SHA}" \
              -var="s3_bucket=${{ vars.S3_BUCKET }}" \
              -var="ssm_param_prefix=${{ vars.SSM_PARAM_PREFIX }}"

